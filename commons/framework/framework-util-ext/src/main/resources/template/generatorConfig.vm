<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

##    <!-- 配置文件 -->
##    <properties resource="generator.properties"></properties>

    <context id="MysqlContext" targetRuntime="MyBatis3" defaultModelType="flat">

        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 由于beginningDelimiter和endingDelimiter的默认值为双引号(")，在Mysql中不能这么写，所以还要将这两个默认值改为`  -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- 为生成的Java模型创建一个toString方法 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"></plugin>

        <!-- 为生成的Java模型类添加序列化接口，并生成serialVersionUID字段 -->
        <plugin type="com.shun.framework.plugin.SerializablePlugin">
            <property name="suppressJavaInterface" value="false"/>
        </plugin>

        <!-- 生成一个新的selectByExample方法，这个方法可以接收offset和limit参数，主要用来实现分页，只支持mysql(已使用pagehelper代替) -->
        <!--<plugin type="com.zheng.common.plugin.PaginationPlugin"></plugin>-->

        <!-- 生成在XML中的<cache>元素 -->
        <plugin type="org.mybatis.generator.plugins.CachePlugin">
            <!-- 使用ehcache -->
            <property name="cache_type" value="org.mybatis.caches.ehcache.LoggingEhcache"/>
            <!-- 内置cache配置 -->
            <!--
            <property name="cache_eviction" value="LRU" />
            <property name="cache_flushInterval" value="60000" />
            <property name="cache_readOnly" value="true" />
            <property name="cache_size" value="1024" />
            -->
        </plugin>

        <!-- Java模型生成equals和hashcode方法 -->
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"></plugin>

        <!-- 生成的代码去掉注释 -->
        <commentGenerator type="com.shun.framework.plugin.CommentGenerator">
            <property name="suppressDate" value="true"/>
            <!-- 是否去除自动生成的注释.true:是;false:否 自动生成代码注释是很反人类的,通常关闭注释 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- 数据库连接URL、用户名、密码 -->
        <jdbcConnection driverClass="${generator_jdbc_driver}" connectionURL="${generator_jdbc_url}"
                        userId="${generator_jdbc_username}" password="${generator_jdbc_password}"/>

        <!--
        default false Java type resolver will always use java.math.BigDecimal if the database column is of type DECIMAL or NUMERIC.
        -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成DOMAIN的包名和位置 -->
        <!-- model生成，指定包名以及生成的目标地址(可以自定义地址,但是路径不存在不会自动创建，使用MAVEN将默认生成在target目录下,会自动创建路径) -->
        <javaModelGenerator targetPackage="${generator_javaModelGenerator_targetPackage}"
                            targetProject="${targetProject}/src/main/java">
            <property name="enableSubPackages" value="false"/>
            <property name="trimStrings" value="true"/>
            <property name="rootClass" value="com.shun.framework.persistent.po.GenericLongPo"/>
        </javaModelGenerator>

        <!-- MapperXML生成，映射文件的包名和位置 -->
        <sqlMapGenerator targetPackage="${generator_sqlMapGenerator_targetPackage}" targetProject="${targetProject_sqlMap}/src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- Mapper接口生成，DAO的包名和位置 -->
        <javaClientGenerator targetPackage="${generator_javaClientGenerator_targetPackage}" targetProject="${targetProject}/src/main/java" type="XMLMAPPER">
            <property name="enableSubPackages" value="false"/>
            <property name="rootInterface" value="com.shun.framework.persistent.mapper.GenericMapper"/>
        </javaClientGenerator>

        <!-- 需要映射的表,MYSQL可以加入主键自增、字段命名、忽略某字段等 -->
        #foreach($table in $tables)
            #if($last_insert_id_tables.containsKey($!table.table_name) == true)
        <table tableName="$!table.table_name" domainObjectName="$!table.model_name"
               enableInsert="true" enableSelectByPrimaryKey="true"
               enableSelectByExample="true" enableUpdateByPrimaryKey="true"
               enableDeleteByPrimaryKey="true" enableDeleteByExample="true"
               enableCountByExample="true" enableUpdateByExample="true"
               selectByPrimaryKeyQueryId="true">
            <generatedKey column="$!last_insert_id_tables.get($!table.table_name)" sqlStatement="MySql" identity="true"/>
        </table>
            #else
        <table tableName="$!table.table_name" domainObjectName="$!table.model_name"
               enableInsert="true" enableSelectByPrimaryKey="true"
               enableSelectByExample="true" enableUpdateByPrimaryKey="true"
               enableDeleteByPrimaryKey="true" enableDeleteByExample="true"
               enableCountByExample="true" enableUpdateByExample="true"
               selectByPrimaryKeyQueryId="true"/>
            #end
        #end
    </context>
</generatorConfiguration>
